/*
    const [disableInfiniteScroll, setDisableInfiniteScroll] = useState<boolean>(false);

    async function fetchData() {
        const url: string = 'https://dog.ceo/api/breeds/image/random/3';
        const res: Response = await fetch(url);
        res
        .json()
        .then(async (res) => {
            if (res && res.message && res.message.length > 0) {
            setItems([...items, ...res.message]);
            setDisableInfiniteScroll(res.message.length < 3);
            } else {
            setDisableInfiniteScroll(true);
            }
        })
        .catch(err => console.error(err));
    }

    useIonViewWillEnter(async () => {
        await fetchData();
    });

    async function searchNext($event: CustomEvent<void>) {
        await fetchData();
        ($event.target as HTMLIonInfiniteScrollElement).complete();
    }
    */

    
  // async function saveNewVisitsCallback(visits: VisitProps) {
  //   try {
  //     log('saveVisit started');
  //     dispatch({ type: SAVE_VISIT_STARTED });
  //     const savedVisit = await (visit._id ? updateVisit(token, visit) : createVisit(token, visit));
  //     log('saveVisit succeeded');
  //     dispatch({ type: SAVE_VISIT_SUCCEEDED, payload: { visit: savedVisit } });
  //   } catch (error) {
  //     log('saveVisit failed');
  //     dispatch({ type: SAVE_VISIT_FAILED, payload: { error } });
  //   }
  // }


  
const FETCH_NEW_VISITS_STARTED = 'FETCH_NEW_VISITS_STARTED';
const FETCH_NEW_VISITS_SUCCEEDED = 'FETCH_NEW_VISITS_SUCCEEDED';
const FETCH_NEW_VISITS_FAILED = 'FETCH_NEW_VISITS_FAILED';


      case FETCH_NEW_VISITS_STARTED:
        return { ...state, fetching: true, fetchingError: null };
      case FETCH_NEW_VISITS_SUCCEEDED:
        return { ...state, visits: payload.visits, fetching: false };
      case FETCH_NEW_VISITS_FAILED:
        return { ...state, fetchingError: payload.error, fetching: false };

{/* <IonInfiniteScroll threshold="100px" disabled={disableInfiniteScroll}
                            onIonInfinite={(e: CustomEvent<void>) => searchNext(e)}>
                            <IonInfiniteScrollContent
                                loadingText="Loading more good visits...">
                            </IonInfiniteScrollContent>
                        </IonInfiniteScroll> 19 */}